language: c

python:
    - 3.3
    - 3.4
    - 3.5
    - 3.6

os:
    - linux
    - osx

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - MAIN_CMD='python setup.py'
        - ASTROPY_VERSION=stable
        # For this package-template, we include examples of Cython modules,
        # so Cython is required for testing. If your package does not include
        # Cython code, you can set CONDA_DEPENDENCIES=''
        - CONDA_CHANNELS='http://ssb.stsci.edu/astroconda astropy-ci-extras'
        - CONDA_DEPENDENCIES='numpy scipy cython matplotlib numba mock bokeh h5py sphinx pandas lmfit'
        - PIP_DEPENDENCIES='bibtexparser batman-package astroquery svo_filters'

    matrix:
        - PYTHON_VERSION=3.5 SETUP_CMD='install'
        - PYTHON_VERSION=3.5 SETUP_CMD='test'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'


# matrix:
#     include:
#        # Try Astropy development version
#        # - env: PYTHON_VERSION=3.5 ASTROPY_VERSION=development SETUP_CMD='test'

before_install:
    # - git clone git://github.com/spacetelescope/pysynphot.git

git:
    submodules: false
 
install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    # - pip install --upgrade pip
    - pip install astropy
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    # - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='ExoCTK/tests/coveragerc'; fi
